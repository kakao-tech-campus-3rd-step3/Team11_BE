name: Java CI with Gradle

on:
  push:
    branches: ['main', 'develop']
  pull_request:
    branches: ['main', 'develop']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      ACCESS_TOKEN_EXPIRATION_SECONDS: 3600
      REFRESH_TOKEN_EXPIRATION_SECONDS: 604800
      JWT_ISSUER: momeet

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: MoMeetServer
          path: build/libs/MoMeetServer-0.0.1-SNAPSHOT.jar

      - name: Upload scripts
        uses: actions/upload-artifact@v4
        with:
          name: deploy-scripts
          path: scripts/deploy.sh

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: MoMeetServer
          path: build/libs/

      - name: Download scripts
        uses: actions/download-artifact@v4
        with:
          name: deploy-scripts
          path: scripts/

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/MoMeetServer-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/MoMeetServer.jar
          scp -i private_key.pem -o StrictHostKeyChecking=no scripts/deploy.sh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/deploy.sh
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "chmod +x /home/${{ secrets.EC2_USERNAME }}/deploy.sh"
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "/home/${{ secrets.EC2_USERNAME }}/deploy.sh"
          rm -f private_key.pem

