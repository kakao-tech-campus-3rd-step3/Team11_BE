plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.pnu'
version = '0.0.1-SNAPSHOT'
description = 'MoMeet'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

bootJar {
    archiveBaseName.set('MoMeetServer')
}

jar {
    archiveBaseName.set('MoMeetServer')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    JJWT_VERSION = '0.13.0'
    DOTENV_VERSION = '4.0.0'
    RESTASSURED_VERSION = '5.5.6'
    AWS_VERSION = '3.4.0'
    JTS_VERSION = '1.20.0'
    HIBERNATE_SPATIAL_VERSION = '7.1.0.Final'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "me.paulschwarz:spring-dotenv:${DOTENV_VERSION}"
    implementation "io.jsonwebtoken:jjwt-api:${JJWT_VERSION}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${JJWT_VERSION}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${JJWT_VERSION}"

    implementation "io.awspring.cloud:spring-cloud-aws-starter-s3:${AWS_VERSION}"

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    implementation "org.locationtech.jts:jts-core:${JTS_VERSION}"
    implementation "org.hibernate:hibernate-spatial:${HIBERNATE_SPATIAL_VERSION}"
    implementation "org.orbisgis:h2gis:2.2.3"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation "io.rest-assured:rest-assured:${RESTASSURED_VERSION}"
    testImplementation "io.rest-assured:json-path:${RESTASSURED_VERSION}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
